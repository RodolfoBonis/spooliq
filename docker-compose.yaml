version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: spooliq_postgres
    restart: always
    environment:
      POSTGRES_DB: spooliq_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d spooliq_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: spooliq_redis
    restart: always
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: spooliq_keycloak
    restart: always
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      
      # Keycloak admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      
      # Keycloak configuration
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      
    ports:
      - "8180:8080"
    volumes:
      - ./scripts/keycloak:/opt/keycloak/data/import
    command: 
      - start-dev
      - --import-realm
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: spooliq_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  spooliq:
    build:
      context: .
      dockerfile: dockerfile
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        VERSION: ${VERSION:-latest}
    container_name: spooliq_api
    restart: always
    ports:
      - ${PORT:-8080}:${PORT:-8080}
    env_file:
      - .env
    environment:
      - ENV=${ENV:-development}
      - PORT=${PORT:-8080}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_SECRET=password
      - DB_NAME=spooliq_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
      - AMQP_CONNECTION=amqp://admin:admin123@rabbitmq:5672/
      - CLIENT_ID=spooliq-client
      - CLIENT_SECRET=client-secret-123
      - REALM=spooliq-realm
      - REALM=spooliq-realm
      - KEYCLOAK_HOST=http://keycloak:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      keycloak:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data: